@use "sass:math";

@mixin mq-below($breakpoint) {
    $value: breakpoint($breakpoint);

    @if $value != null {
        @media (max-width: $value) { @content; }
    } @else {
        @media (max-width: $breakpoint) { @content; }
    }
}


@mixin mq-above($breakpoint) {
    $value: breakpoint($breakpoint);

    @if $value != null {
        @media (min-width: $value + 1) { @content; }
    } @else {
        @media (min-width: $breakpoint + 1) { @content; }
    }
}

@mixin responsive-font($options) {
    $min-size: map-get($options, min-size);
    $max-size: map-get($options, max-size);
    $lower-bound: map-get($options, lower-bound);
    $upper-bound: map-get($options, upper-bound);

    $max-minus-min: strip-unit($max-size) - strip-unit($min-size);

    @if(index("rem", unit($min-size)) != null and index("rem", unit($max-size)) != null) {
        $base-rem: 10;
        $upper-minus-lower: strip-unit(math.div($upper-bound, $base-rem)) - strip-unit(math.div($lower-bound, $base-rem));
        $lower-bound-rems: #{strip-unit(math.div($lower-bound, $base-rem))}rem;

        font-size: calc(#{$min-size} + #{$max-minus-min} * ((100vw - #{$lower-bound-rems}) / #{$upper-minus-lower}));
    } @else {
        $upper-minus-lower: strip-unit($upper-bound) - strip-unit($lower-bound);
        font-size: calc(#{$min-size} + #{$max-minus-min} * ((100vw - #{$lower-bound}) / #{$upper-minus-lower}));
    }

    @include mq-below($lower-bound) {
        font-size: $min-size;
    }

    @include mq-above($upper-bound) {
        font-size: $max-size;
    }
}
